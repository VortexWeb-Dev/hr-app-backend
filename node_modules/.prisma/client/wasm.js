
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AttendanceLogScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  log_type: 'log_type',
  log_time: 'log_time'
};

exports.Prisma.CompanyDocumentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  category: 'category',
  file_url: 'file_url',
  uploaded_by_bitrix_id: 'uploaded_by_bitrix_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RequestScalarFieldEnum = {
  id: 'id',
  requester_bitrix_id: 'requester_bitrix_id',
  assigned_to_bitrix_id: 'assigned_to_bitrix_id',
  request_type: 'request_type',
  status: 'status',
  address_to: 'address_to',
  purpose: 'purpose',
  country: 'country',
  noc_reason: 'noc_reason',
  leave_type: 'leave_type',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LeaveRequestScalarFieldEnum = {
  id: 'id',
  requester_bitrix_id: 'requester_bitrix_id',
  assigned_to_bitrix_id: 'assigned_to_bitrix_id',
  leave_type: 'leave_type',
  reason: 'reason',
  request_type: 'request_type',
  status: 'status',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  bitrix_id: 'bitrix_id',
  name: 'name',
  email: 'email'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  bitrixId: 'bitrixId',
  title: 'title',
  description: 'description',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  created_by_bitrix_id: 'created_by_bitrix_id'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  bitrixId: 'bitrixId',
  title: 'title',
  description: 'description',
  content: 'content',
  video_url: 'video_url',
  sequence: 'sequence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  courseId: 'courseId'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  course_bitrix_id: 'course_bitrix_id',
  enrolled_at: 'enrolled_at'
};

exports.Prisma.UserLessonProgressScalarFieldEnum = {
  id: 'id',
  enrollment_id: 'enrollment_id',
  lesson_bitrix_id: 'lesson_bitrix_id',
  completed_at: 'completed_at'
};

exports.Prisma.OnboardingProcessScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  status: 'status',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OffboardingProcessScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  last_working_day: 'last_working_day',
  status: 'status',
  progress: 'progress',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProcessTaskScalarFieldEnum = {
  id: 'id',
  process_type: 'process_type',
  process_id: 'process_id',
  task_id: 'task_id',
  is_completed: 'is_completed',
  completed_at: 'completed_at'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.OrientationSessionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  session_date: 'session_date',
  assigned_hr_bitrix_id: 'assigned_hr_bitrix_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  event_type: 'event_type',
  user_bitrix_id: 'user_bitrix_id',
  event_date: 'event_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.AttendanceLogOrderByRelevanceFieldEnum = {
  log_type: 'log_type'
};

exports.Prisma.CompanyDocumentOrderByRelevanceFieldEnum = {
  title: 'title',
  category: 'category',
  file_url: 'file_url'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.RequestOrderByRelevanceFieldEnum = {
  request_type: 'request_type',
  status: 'status',
  address_to: 'address_to',
  purpose: 'purpose',
  country: 'country',
  noc_reason: 'noc_reason',
  leave_type: 'leave_type'
};

exports.Prisma.LeaveRequestOrderByRelevanceFieldEnum = {
  leave_type: 'leave_type',
  reason: 'reason',
  request_type: 'request_type',
  status: 'status'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email'
};

exports.Prisma.CourseOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  category: 'category'
};

exports.Prisma.LessonOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  content: 'content',
  video_url: 'video_url'
};

exports.Prisma.OnboardingProcessOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.OffboardingProcessOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.ProcessTaskOrderByRelevanceFieldEnum = {
  process_type: 'process_type'
};

exports.Prisma.TaskOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description'
};

exports.Prisma.OrientationSessionOrderByRelevanceFieldEnum = {
  title: 'title'
};

exports.Prisma.EventOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  event_type: 'event_type'
};


exports.Prisma.ModelName = {
  AttendanceLog: 'AttendanceLog',
  CompanyDocument: 'CompanyDocument',
  Request: 'Request',
  LeaveRequest: 'LeaveRequest',
  User: 'User',
  Course: 'Course',
  Lesson: 'Lesson',
  Enrollment: 'Enrollment',
  UserLessonProgress: 'UserLessonProgress',
  OnboardingProcess: 'OnboardingProcess',
  OffboardingProcess: 'OffboardingProcess',
  ProcessTask: 'ProcessTask',
  Task: 'Task',
  OrientationSession: 'OrientationSession',
  Event: 'Event'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\USER\\OneDrive\\Desktop\\Springfield HR app backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\USER\\OneDrive\\Desktop\\Springfield HR app backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ========================\n// ✅ Attendance Logs\n// ========================\nmodel AttendanceLog {\n  id             Int      @id @default(autoincrement())\n  user_bitrix_id Int\n  log_type       String // \"check_in\" or \"check_out\"\n  log_time       DateTime @default(now())\n}\n\n// ========================\n// ✅ Company Documents\n// ========================\nmodel CompanyDocument {\n  id                    Int      @id @default(autoincrement())\n  title                 String\n  category              String\n  file_url              String\n  uploaded_by_bitrix_id Int\n  created_at            DateTime @default(now())\n  updated_at            DateTime @updatedAt\n}\n\n// ========================\n// ✅ Requests Table\n// ========================\nmodel Request {\n  id                    Int    @id @default(autoincrement())\n  requester_bitrix_id   Int\n  assigned_to_bitrix_id Int\n  request_type          String // e.g., \"Leave Application\", \"NOC\", \"General Request\"\n  status                String @default(\"Manager Pending\")\n\n  address_to String?\n  purpose    String?\n  country    String?\n  noc_reason String?\n  leave_type String?\n  start_date DateTime?\n  end_date   DateTime?\n\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n}\n\nmodel LeaveRequest {\n  id                    Int      @id @default(autoincrement())\n  requester_bitrix_id   Int\n  assigned_to_bitrix_id Int\n  leave_type            String\n  reason                String?\n  request_type          String   @default(\"Leave Application\")\n  status                String   @default(\"Manager Pending\")\n  start_date            DateTime\n  end_date              DateTime\n  created_at            DateTime @default(now())\n  updated_at            DateTime @updatedAt\n\n  requester User @relation(fields: [requester_bitrix_id], references: [bitrix_id])\n}\n\nmodel User {\n  bitrix_id     Int            @id\n  name          String\n  email         String?\n  leaveRequests LeaveRequest[]\n}\n\n// course\nmodel Course {\n  id                   Int      @id @default(autoincrement())\n  bitrixId             Int?     @unique\n  title                String\n  description          String?\n  category             String?\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt\n  created_by_bitrix_id Int\n\n  // Proper relation with Lesson\n  lessons Lesson[] @relation(\"CourseLessons\")\n}\n\nmodel Lesson {\n  id          Int      @id @default(autoincrement())\n  bitrixId    Int?     @unique\n  title       String\n  description String?\n  content     String?\n  video_url   String?\n  sequence    Int?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  courseId Int\n  course   Course @relation(\"CourseLessons\", fields: [courseId], references: [id])\n}\n\n// ========================\n// ✅ Enrollment & Lesson Progress\n// ========================\nmodel Enrollment {\n  id               Int      @id @default(autoincrement())\n  user_bitrix_id   Int\n  course_bitrix_id Int\n  enrolled_at      DateTime @default(now())\n}\n\nmodel UserLessonProgress {\n  id               Int       @id @default(autoincrement())\n  enrollment_id    Int\n  lesson_bitrix_id Int\n  completed_at     DateTime?\n}\n\n// ========================\n// ✅ Onboarding / Offboarding\n// ========================\nmodel OnboardingProcess {\n  id             Int       @id @default(autoincrement())\n  user_bitrix_id Int       @unique\n  status         String    @default(\"Not Started\")\n  start_date     DateTime?\n  end_date       DateTime?\n  created_at     DateTime  @default(now())\n  updated_at     DateTime  @updatedAt\n}\n\nmodel OffboardingProcess {\n  id               Int      @id @default(autoincrement())\n  user_bitrix_id   Int      @unique\n  last_working_day DateTime\n  status           String\n  progress         Int      @default(0)\n  created_at       DateTime @default(now())\n  updated_at       DateTime @updatedAt\n}\n\n// ========================\n// ✅ Process Tasks\n// ========================\nmodel ProcessTask {\n  id           Int       @id @default(autoincrement())\n  process_type String // \"onboarding\" | \"offboarding\"\n  process_id   Int\n  task_id      Int\n  is_completed Boolean   @default(false)\n  completed_at DateTime?\n}\n\nmodel Task {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String?\n  created_at  DateTime @default(now())\n}\n\n// ========================\n// ✅ Orientation Sessions\n// ========================\nmodel OrientationSession {\n  id                    Int      @id @default(autoincrement())\n  title                 String\n  session_date          DateTime\n  assigned_hr_bitrix_id Int\n  created_at            DateTime @default(now())\n  updated_at            DateTime @updatedAt\n}\n\n// ========================\n// ✅ Events\n// ========================\nmodel Event {\n  id             Int      @id @default(autoincrement())\n  title          String\n  description    String?\n  event_type     String\n  user_bitrix_id Int?\n  event_date     DateTime\n  created_at     DateTime @default(now())\n  updated_at     DateTime @updatedAt\n}\n",
  "inlineSchemaHash": "f6d17be41a795dc24f24fd0f33cdf1edd8c3193b0573663cf4510c49cd27cb5c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"AttendanceLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"log_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"log_time\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CompanyDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploaded_by_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Request\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requester_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assigned_to_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"request_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purpose\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"noc_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leave_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LeaveRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requester_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assigned_to_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leave_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"requester\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LeaveRequestToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leaveRequests\",\"kind\":\"object\",\"type\":\"LeaveRequest\",\"relationName\":\"LeaveRequestToUser\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bitrixId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_by_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lessons\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"CourseLessons\"}],\"dbName\":null},\"Lesson\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bitrixId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"video_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sequence\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseLessons\"}],\"dbName\":null},\"Enrollment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"course_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enrolled_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserLessonProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enrollment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lesson_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OnboardingProcess\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OffboardingProcess\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"last_working_day\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProcessTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"process_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"process_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"task_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OrientationSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assigned_hr_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"event_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_bitrix_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"event_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

