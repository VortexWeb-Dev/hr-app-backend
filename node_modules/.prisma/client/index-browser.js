
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AttendanceLogScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  log_type: 'log_type',
  log_time: 'log_time'
};

exports.Prisma.CompanyDocumentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  category: 'category',
  file_url: 'file_url',
  uploaded_by_bitrix_id: 'uploaded_by_bitrix_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RequestScalarFieldEnum = {
  id: 'id',
  requester_bitrix_id: 'requester_bitrix_id',
  assigned_to_bitrix_id: 'assigned_to_bitrix_id',
  request_type: 'request_type',
  status: 'status',
  address_to: 'address_to',
  purpose: 'purpose',
  country: 'country',
  noc_reason: 'noc_reason',
  leave_type: 'leave_type',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LeaveRequestScalarFieldEnum = {
  id: 'id',
  requester_bitrix_id: 'requester_bitrix_id',
  assigned_to_bitrix_id: 'assigned_to_bitrix_id',
  leave_type: 'leave_type',
  reason: 'reason',
  request_type: 'request_type',
  status: 'status',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  bitrix_id: 'bitrix_id',
  name: 'name',
  email: 'email'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  bitrixId: 'bitrixId',
  title: 'title',
  description: 'description',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  created_by_bitrix_id: 'created_by_bitrix_id'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  bitrixId: 'bitrixId',
  title: 'title',
  description: 'description',
  content: 'content',
  video_url: 'video_url',
  sequence: 'sequence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  courseId: 'courseId'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  course_bitrix_id: 'course_bitrix_id',
  enrolled_at: 'enrolled_at'
};

exports.Prisma.UserLessonProgressScalarFieldEnum = {
  id: 'id',
  enrollment_id: 'enrollment_id',
  lesson_bitrix_id: 'lesson_bitrix_id',
  completed_at: 'completed_at'
};

exports.Prisma.OnboardingProcessScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  status: 'status',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OffboardingProcessScalarFieldEnum = {
  id: 'id',
  user_bitrix_id: 'user_bitrix_id',
  last_working_day: 'last_working_day',
  status: 'status',
  progress: 'progress',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProcessTaskScalarFieldEnum = {
  id: 'id',
  process_type: 'process_type',
  process_id: 'process_id',
  task_id: 'task_id',
  is_completed: 'is_completed',
  completed_at: 'completed_at'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.OrientationSessionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  session_date: 'session_date',
  assigned_hr_bitrix_id: 'assigned_hr_bitrix_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  event_type: 'event_type',
  user_bitrix_id: 'user_bitrix_id',
  event_date: 'event_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.AttendanceLogOrderByRelevanceFieldEnum = {
  log_type: 'log_type'
};

exports.Prisma.CompanyDocumentOrderByRelevanceFieldEnum = {
  title: 'title',
  category: 'category',
  file_url: 'file_url'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.RequestOrderByRelevanceFieldEnum = {
  request_type: 'request_type',
  status: 'status',
  address_to: 'address_to',
  purpose: 'purpose',
  country: 'country',
  noc_reason: 'noc_reason',
  leave_type: 'leave_type'
};

exports.Prisma.LeaveRequestOrderByRelevanceFieldEnum = {
  leave_type: 'leave_type',
  reason: 'reason',
  request_type: 'request_type',
  status: 'status'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email'
};

exports.Prisma.CourseOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  category: 'category'
};

exports.Prisma.LessonOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  content: 'content',
  video_url: 'video_url'
};

exports.Prisma.OnboardingProcessOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.OffboardingProcessOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.ProcessTaskOrderByRelevanceFieldEnum = {
  process_type: 'process_type'
};

exports.Prisma.TaskOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description'
};

exports.Prisma.OrientationSessionOrderByRelevanceFieldEnum = {
  title: 'title'
};

exports.Prisma.EventOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  event_type: 'event_type'
};


exports.Prisma.ModelName = {
  AttendanceLog: 'AttendanceLog',
  CompanyDocument: 'CompanyDocument',
  Request: 'Request',
  LeaveRequest: 'LeaveRequest',
  User: 'User',
  Course: 'Course',
  Lesson: 'Lesson',
  Enrollment: 'Enrollment',
  UserLessonProgress: 'UserLessonProgress',
  OnboardingProcess: 'OnboardingProcess',
  OffboardingProcess: 'OffboardingProcess',
  ProcessTask: 'ProcessTask',
  Task: 'Task',
  OrientationSession: 'OrientationSession',
  Event: 'Event'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
